name: Build APK - Corte de Matos App

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build_type:
        description: "Tipo de build"
        required: true
        default: "preview"
        type: choice
        options:
          - preview
          - development
          - production

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    env:
      YARN_ENABLE: "0"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Force NPM only and remove Yarn
        run: |
          rm -f yarn.lock
          rm -f package-lock.json
          npm config set fund false
          npm config set audit false

      - name: Clear all caches
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -rf ~/.npm
          rm -rf ~/.cache

      - name: Install dependencies with NPM
        run: npm install --legacy-peer-deps

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Setup Android Keystore
        run: |
          echo "Setting up Android credentials..."
          
          # Verificar se todas as secrets existem
          if [ -z "${{ secrets.ANDROID_KEYSTORE }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEYSTORE não configurada!"
            echo "Configure em: https://github.com/pikulitomarkin/corte-poda/settings/secrets/actions"
            exit 1
          fi
          
          if [ -z "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEYSTORE_PASSWORD não configurada!"
            exit 1
          fi
          
          if [ -z "${{ secrets.ANDROID_KEY_ALIAS }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEY_ALIAS não configurada!"
            exit 1
          fi
          
          if [ -z "${{ secrets.ANDROID_KEY_PASSWORD }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEY_PASSWORD não configurada!"
            exit 1
          fi
          
          echo "✅ Todas as secrets encontradas!"
          
          # Decodificar keystore
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > my-release-key.jks
          
          # Verificar se o keystore foi criado
          if [ ! -f "my-release-key.jks" ]; then
            echo "❌ ERRO: Falha ao criar keystore!"
            exit 1
          fi
          
          # Create credentials.json with actual values
          cat > credentials.json << EOF
          {
            "android": {
              "keystore": {
                "keystorePath": "./my-release-key.jks",
                "keystorePassword": "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF
          
          echo "✅ Android keystore e credentials.json configurados!"
          ls -la my-release-key.jks
          echo "✅ Arquivo credentials.json criado com secrets"

      - name: Initialize EAS project
        run: |
          echo "Initializing EAS project..."
          eas init --force --non-interactive || echo "EAS init may have failed, continuing..."
          
      - name: Verify EAS configuration
        run: |
          echo "Checking app.json for projectId..."
          cat app.json
          echo "Checking eas.json..."
          cat eas.json

      - name: Build APK Preview
        if: ${{ github.event.inputs.build_type == 'preview' || github.event.inputs.build_type == '' }}
        run: eas build --platform android --profile preview --non-interactive

      - name: Build APK Development
        if: ${{ github.event.inputs.build_type == 'development' }}
        run: eas build --platform android --profile development --non-interactive

      - name: Build AAB Production
        if: ${{ github.event.inputs.build_type == 'production' }}
        run: eas build --platform android --profile production --non-interactive

      - name: Get build info
        run: |
          echo "Build completed successfully!"
          echo "Check your Expo dashboard for download link"
          echo "Build type: ${{ github.event.inputs.build_type || 'preview' }}"
