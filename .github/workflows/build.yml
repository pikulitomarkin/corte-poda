name: Build APK - Corte de Matos App

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      build_type:
        description: "Tipo de build"
        required: true
        default: "preview"
        type: choice
        options:
          - preview
          - development
          - production

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    env:
      YARN_ENABLE: "0"
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Force NPM only and remove Yarn
        run: |
          rm -f yarn.lock
          rm -f package-lock.json
          npm config set fund false
          npm config set audit false

      - name: Clear all caches
        run: |
          npm cache clean --force
          rm -rf node_modules
          rm -rf ~/.npm
          rm -rf ~/.cache

      - name: Install dependencies with NPM
        run: npm install --legacy-peer-deps

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Setup Android Keystore
        run: |
          echo "Setting up Android credentials..."
          
          # Verificar se todas as secrets existem
          if [ -z "${{ secrets.ANDROID_KEYSTORE }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEYSTORE não configurada!"
            echo "Configure em: https://github.com/pikulitomarkin/corte-poda/settings/secrets/actions"
            exit 1
          fi
          
          if [ -z "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEYSTORE_PASSWORD não configurada!"
            exit 1
          fi
          
          if [ -z "${{ secrets.ANDROID_KEY_ALIAS }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEY_ALIAS não configurada!"
            exit 1
          fi
          
          if [ -z "${{ secrets.ANDROID_KEY_PASSWORD }}" ]; then
            echo "❌ ERRO: Secret ANDROID_KEY_PASSWORD não configurada!"
            exit 1
          fi
          
          echo "✅ Todas as secrets encontradas!"
          
          # Decodificar keystore
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > my-release-key.jks
          
          # Verificar se o keystore foi criado
          if [ ! -f "my-release-key.jks" ]; then
            echo "❌ ERRO: Falha ao criar keystore!"
            exit 1
          fi
          
          # Create credentials.json with actual values
          cat > credentials.json << EOF
          {
            "android": {
              "keystore": {
                "keystorePath": "./my-release-key.jks",
                "keystorePassword": "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF
          
          echo "✅ Android keystore e credentials.json configurados!"
          ls -la my-release-key.jks
          echo "✅ Arquivo credentials.json criado com secrets"

      - name: Initialize EAS project
        run: |
          echo "🔧 Inicializando projeto EAS..."
          
          # Verificar se o EXPO_TOKEN está configurado
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "❌ ERRO: Secret EXPO_TOKEN não configurada!"
            echo "Configure em: https://github.com/pikulitomarkin/corte-poda/settings/secrets/actions"
            echo "Obtenha o token com: npx expo login && npx expo whoami --auth"
            exit 1
          fi
          
          echo "✅ EXPO_TOKEN encontrado!"
          
          # Verificar versão do EAS CLI
          echo "🔍 Verificando EAS CLI..."
          npx eas --version || echo "EAS CLI será usado via npx"
          
          # Verificar se já está autenticado
          echo "🔐 Verificando autenticação..."
          npx expo whoami || echo "Usando token para autenticação"
          
          # Criar app.json com projectId se necessário
          echo "� Configurando app.json..."
          if ! grep -q '"projectId"' app.json; then
            echo "Adicionando projectId ao app.json..."
            # Backup do app.json original
            cp app.json app.json.backup
            
            # Criar app.json com projectId
            cat > app.json.tmp << 'EOF'
          {
            "expo": {
              "name": "Corte de Matos",
              "slug": "corte-matos-app", 
              "version": "1.0.0",
              "orientation": "portrait",
              "platforms": ["ios", "android", "web"],
              "projectId": "PLACEHOLDER_PROJECT_ID",
              "icon": "./assets/icon.png",
              "userInterfaceStyle": "light",
              "splash": {
                "image": "./assets/splash.png",
                "resizeMode": "contain",
                "backgroundColor": "#2e7d32"
              },
              "assetBundlePatterns": ["**/*"],
              "ios": {
                "supportsTablet": true,
                "bundleIdentifier": "com.cortematosapp.ios"
              },
              "android": {
                "adaptiveIcon": {
                  "foregroundImage": "./assets/adaptive-icon.png",
                  "backgroundColor": "#2e7d32"
                },
                "package": "com.cortematosapp.app",
                "versionCode": 1,
                "permissions": [
                  "android.permission.WRITE_EXTERNAL_STORAGE",
                  "android.permission.READ_EXTERNAL_STORAGE"
                ]
              }
            }
          }
          EOF
            mv app.json.tmp app.json
          fi
          
          # Tentar inicializar EAS de forma simples
          echo "🚀 Inicializando EAS..."
          npx eas init --non-interactive || {
            echo "⚠️ EAS init falhou, mas continuando..."
            echo "O projeto será criado automaticamente durante o build se necessário"
          }
          
          echo "✅ EAS configurado!"
          
      - name: Verify EAS configuration
        run: |
          echo "🔍 Verificando configuração EAS..."
          echo "📄 Conteúdo do app.json:"
          cat app.json
          echo ""
          echo "📄 Conteúdo do eas.json:"
          cat eas.json
          echo ""
          echo "📄 Verificando credentials.json:"
          if [ -f "credentials.json" ]; then
            echo "✅ credentials.json encontrado"
            # Mostrar estrutura sem senhas
            jq 'del(.android.keystore.keystorePassword, .android.keystore.keyPassword)' credentials.json || echo "Arquivo existe mas pode ter formato inválido"
          else
            echo "❌ credentials.json não encontrado!"
            exit 1
          fi
          
          echo "🔑 Verificando keystore:"
          if [ -f "my-release-key.jks" ]; then
            echo "✅ Keystore encontrado:"
            ls -la my-release-key.jks
          else
            echo "❌ Keystore não encontrado!"
            exit 1
          fi

      - name: Build APK Preview
        if: ${{ github.event.inputs.build_type == 'preview' || github.event.inputs.build_type == '' }}
        run: |
          echo "🔨 Iniciando build APK Preview..."
          echo "Se o projeto não existir, será criado automaticamente"
          npx eas build --platform android --profile preview --non-interactive --auto-submit-with-profile=false || {
            echo "❌ Build falhou! Possíveis causas:"
            echo "1. Secrets não configuradas corretamente"
            echo "2. Projeto não existe no Expo (será criado automaticamente na próxima tentativa)"
            echo "3. Token expirado"
            echo ""
            echo "📋 Verifique:"
            echo "- Todas as 5 secrets estão configuradas"
            echo "- Token EXPO_TOKEN está válido"
            echo "- Keystore está correto"
            exit 1
          }

      - name: Build APK Development
        if: ${{ github.event.inputs.build_type == 'development' }}
        run: |
          echo "🔨 Iniciando build APK Development..."
          npx eas build --platform android --profile development --non-interactive --auto-submit-with-profile=false || exit 1

      - name: Build AAB Production
        if: ${{ github.event.inputs.build_type == 'production' }}
        run: |
          echo "🔨 Iniciando build AAB Production..."
          npx eas build --platform android --profile production --non-interactive --auto-submit-with-profile=false || exit 1

      - name: Get build info
        run: |
          echo "Build completed successfully!"
          echo "Check your Expo dashboard for download link"
          echo "Build type: ${{ github.event.inputs.build_type || 'preview' }}"
