name: 🎯 Build APK - ULTIMATE FIX (NPM Error Resolved)

on:
  workflow_dispatch:
    inputs:
      profile:
        description: 'Build profile'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production

jobs:
  build:
    name: 📱 Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: |
          echo "📦 Instalando dependências..."
          npm ci --legacy-peer-deps --no-audit --no-fund

      - name: 🧹 Clear npm cache and fix permissions
        run: |
          echo "🧹 Limpando cache npm e corrigindo permissões..."
          npm cache clean --force
          rm -rf ~/.npm
          rm -rf node_modules/.bin
          npm config set fund false
          npm config set audit false
          echo "✅ Cache limpo!"

      - name: 🔧 Install EAS CLI manually
        run: |
          echo "🔧 Instalando EAS CLI manualmente..."
          
          # Método 1: npm install global
          npm install -g eas-cli@latest --force --no-fund --no-audit || echo "Método 1 falhou"
          
          # Método 2: Instalar localmente
          npm install eas-cli@latest --save-dev --legacy-peer-deps || echo "Método 2 falhou"
          
          # Método 3: Download direto
          curl -sSL https://get.expo.dev/eas | bash || echo "Método 3 falhou"
          
          # Verificar qual método funcionou
          echo "🔍 Verificando instalações:"
          which eas || echo "eas global não encontrado"
          ./node_modules/.bin/eas --version || echo "eas local não encontrado"
          npx eas --version || echo "npx eas não funciona"
          
          echo "✅ Tentativas de instalação concluídas!"

      - name: 🔐 Setup Expo Token
        run: |
          echo "🔐 Configurando token Expo..."
          export EXPO_TOKEN="${{ secrets.EXPO_TOKEN }}"
          echo "EXPO_TOKEN=${EXPO_TOKEN}" >> $GITHUB_ENV
          echo "✅ Token configurado!"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 🔑 Setup Android keystore
        run: |
          echo "🔑 Configurando keystore..."
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > my-release-key.jks
          
          cat > credentials.json << EOF
          {
            "android": {
              "keystore": {
                "keystorePath": "./my-release-key.jks",
                "keystorePassword": "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}",
                "keyAlias": "${{ secrets.ANDROID_KEY_ALIAS }}",
                "keyPassword": "${{ secrets.ANDROID_KEY_PASSWORD }}"
              }
            }
          }
          EOF
          
          echo "✅ Keystore configurado!"

      - name: 🚀 Build with multiple methods
        run: |
          echo "🚀 Tentando build com múltiplos métodos..."
          
          # Configurar variáveis
          export EXPO_TOKEN="${{ secrets.EXPO_TOKEN }}"
          export EAS_NO_VCS=1
          export CI=1
          
          # Método 1: EAS global
          echo "🔄 Método 1: eas global"
          if command -v eas &> /dev/null; then
            echo "✅ EAS global encontrado, tentando build..."
            eas build --platform android --profile ${{ github.event.inputs.profile }} --non-interactive --wait && exit 0
          else
            echo "❌ EAS global não encontrado"
          fi
          
          # Método 2: EAS local
          echo "🔄 Método 2: eas local"
          if [ -f "./node_modules/.bin/eas" ]; then
            echo "✅ EAS local encontrado, tentando build..."
            ./node_modules/.bin/eas build --platform android --profile ${{ github.event.inputs.profile }} --non-interactive --wait && exit 0
          else
            echo "❌ EAS local não encontrado"
          fi
          
          # Método 3: Usar expo-github-action
          echo "🔄 Método 3: usando expo-github-action"
          npm install -g @expo/cli@latest
          npx expo install --fix
          npx @expo/cli@latest install eas-cli
          npx eas build --platform android --profile ${{ github.event.inputs.profile }} --non-interactive --wait || echo "❌ Método 3 falhou"

      - name: ✅ Success
        run: |
          echo "🎉 Build concluído!"
          echo "📱 Verifique em: https://expo.dev/accounts/pikulito/projects/corte-matos-app/builds"
